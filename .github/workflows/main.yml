
name: CI

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches: 
      - '**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    name: Build frontend
    defaults:
      run:
        shell: bash
        working-directory: frontend

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Check code style
        run: npm run code-style

      - name: Test frontend
        run: npm test -- --coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: frontend/coverage/lcov-report

      - name: Build frontend
        run: npm run build

      - name: Archive frontend bundle
        uses: actions/upload-artifact@v2
        with:
          name: kappa-meteo-frontend
          path: frontend/build

  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}:${{ github.sha }}
    steps:
      - uses: actions/checkout@v2

      #- name: Setup GCloud
      #  uses: google-github-actions/setup-gcloud@master
      #  with:
      #    project_id: ${{ secrets.GCP_PROJECT_ID }}
      #    service_account_email: ${{ secrets.GCP_EMAIL }}
      #    service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      #- name: Configure Docker
      #  run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: docker build . -t $IMAGE_NAME

      #- name: Push Docker image
      #  run: docker push $IMAGE_NAME

  test-backend:
    name: Test backend
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run maven test
        run: mvn -B clean test

  deploy-staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build-frontend, build-backend, test-backend]
  #  env:
  #    IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}:${{ github.sha }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
  #
  #    - name: Setup GCloud
  #      uses: google-github-actions/setup-gcloud@master
  #      with:
  #        project_id: ${{ secrets.GCP_PROJECT_ID }}
  #        service_account_email: ${{ secrets.GCP_EMAIL }}
  #        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
  #
  #    - name: Deploy backend to Cloud Run
  #      run: gcloud run deploy ${{ secrets.GCP_APP_NAME }} --image=$IMAGE_NAME --platform managed --region europe-west1
  #
      - name: Get artifacts
        uses: actions/download-artifact@v2
        with:
          name: kappa-meteo-frontend
          path: frontend/build
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FLOW_ACADEMY_METEO }}'
          channelId: live
          projectId: ${{ secrets.GCP_PROJECT_ID }}
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
